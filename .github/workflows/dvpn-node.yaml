name: dvpn-node

on:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - .sentinelnode/**
  #     - cdk/**
  #     - Dockerfile
  workflow_dispatch:

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

env:
  aws_account_id: "103309208207"
  service_name: "dvpn-node"
  max_image_count: 1

jobs:
  cdk:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        region:
          - eu-west-3
          # - eu-north-1
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set environment variables
        run: |
          echo "role_to_assume=arn:aws:iam::${{ env.aws_account_id }}:role/${{ env.service_name }}" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install CDK
        run: |
          npm install --global aws-cdk
      - name: Install Python dependencies for CDK initialize
        working-directory: ./cdk
        run: |
          python -m pip install --upgrade pip
          python -m pip install --requirement requirements.txt
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ matrix.region }}
          role-to-assume: ${{ env.role_to_assume }}
      - name: (CDK) Initialize ECR
        working-directory: ./cdk/initialize
        run: |
          cdk bootstrap aws://${{ env.aws_account_id }}/${{ matrix.region }}
          cdk deploy
        env:
          AWS_REGION: ${{ matrix.region }}
          REPOSITORY_NAME: ${{ env.service_name }}
          MAX_IMAGE_COUNT: ${{ env.max_image_count }}
      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v2
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      # - name: Docker Build Push
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     provenance: false
      #     push: true
      #     tags: |
      #       ${{ steps.login-ecr.outputs.registry }}/${{ env.service_name }}:latest
      #       ${{ steps.login-ecr.outputs.registry }}/${{ env.service_name }}:${{ github.sha }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
      - name: (CDK) Update ECS
        working-directory: ./cdk/update
        run: |
          cdk bootstrap aws://${{ env.aws_account_id }}/${{ matrix.region }}
          cdk deploy
        env:
          AWS_REGION: ${{ matrix.region }}
          CLUSTER_NAME: ${{ env.service_name }}
          REPOSITORY_NAME: ${{ env.service_name }}
          API_PORT: 47368
          V2RAY_PORT: 56646
