name: dvpn-node

on:
  # push:
  #   branches: [main]
  workflow_dispatch:

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

env:
  aws_account_id: "103309208207"
  role_to_assume: arn:aws:iam::103309208207:role/dvpn-node

jobs:
  cdk:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        # region: ["eu-west-3", "eu-north-1"]
        region: ["eu-west-3"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install CDK
        run: |
          npm install --global aws-cdk
      - name: Install Python dependencies for CDK initialize
        working-directory: ./cdk
        run: |
          python -m pip install --upgrade pip
          python -m pip install --requirement requirements.txt
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ matrix.region }}
          role-to-assume: ${{ env.role_to_assume }}
      # - name: Use CDK to initialize AWS Region
      #   working-directory: ./cdk/initialize
      #   run: |
      #     cdk bootstrap aws://${{ env.aws_account_id }}/${{ matrix.region }}
      #     cdk deploy
      #   env:
      #     AWS_REGION: ${{ matrix.region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker Build Push
        uses: docker/build-push-action@v5
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: my-ecr-repo
          IMAGE_TAG: ${{ github.sha }}
        with:
          context: .
          # provenance: false
          push: true
          tags: |
            ${REGISTRY}/${REPOSITORY}:latest
            ${REGISTRY}/${REPOSITORY}:${IMAGE_TAG}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # - name: Build and upload Docker image to ECR
      #   shell: bash
      #   run: |
      #     .github/scripts/docker.sh
      #   env:
      #     AWS_REGION: ${{ matrix.region }}
      #     AWS_ACCOUNT_ID: ${{ env.aws_account_id }}



      # - name: Use CDK to update ECS Services
      #   working-directory: ./cdk/update
      #   run: |
      #     cdk bootstrap aws://${{ env.aws_account_id }}/${{ matrix.region }}
      #     cdk deploy
      #   env:
      #     AWS_REGION: ${{ matrix.region }}
